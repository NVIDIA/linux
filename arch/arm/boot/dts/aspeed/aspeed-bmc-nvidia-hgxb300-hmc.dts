// SPDX-License-Identifier: GPL-2.0+
/dts-v1/;

#include "aspeed-g6.dtsi"
#include <dt-bindings/gpio/aspeed-gpio.h>
#include <dt-bindings/leds/common.h>
#include <dt-bindings/i2c/i2c.h>

/ {
    model = "AST2600 HGXB300 HMC";
    compatible = "aspeed,ast2600";

    aliases {
        serial4 = &uart5;
        i2c19 = &i2c5_mux71_0;
        i2c20 = &i2c5_mux71_1;
        i2c21 = &i2c5_mux71_2;
        i2c22 = &i2c5_mux71_3;
        i2c23 = &i2c7_mux71_0;
        i2c24 = &i2c7_mux71_1;
        i2c25 = &i2c7_mux71_2;
        i2c26 = &i2c7_mux71_3;
        i2c27 = &i2c9_mux71_0;
        i2c28 = &i2c9_mux71_1;
        i2c29 = &i2c9_mux71_2;
        i2c30 = &i2c9_mux71_3;
        i2c31 = &i2c10_mux71_0;
        i2c32 = &i2c10_mux71_1;
        i2c33 = &i2c10_mux71_2;
        i2c34 = &i2c10_mux71_3;
	};

	chosen {
		stdout-path = &uart5;
		bootargs = "console=tty0 console=ttyS4,115200 earlyprintk";
	};

	memory@80000000 {
		reg = <0x80000000 0x40000000>;
	};

        power-gpios{
                n2-gpios = <&gpio0 ASPEED_GPIO(N, 2) (GPIO_ACTIVE_HIGH|GPIO_PULL_UP)>;
                n3-gpios = <&gpio0 ASPEED_GPIO(N, 3) (GPIO_ACTIVE_HIGH|GPIO_PULL_UP)>;
        };

	reserved-memory {
        #address-cells = <2>;
        #size-cells = <2>;
        ranges;

        ramoops@0xbc000000 {
                compatible = "ramoops";
                reg = <0 0xbc000000 0 0x100000>; // 1MB at 0xbc000000
                record-size = <0x10000>; // 64kB per record
                console-size = <0x10000>; // 64kB for console output
                pmsg-size = <0x1000>; // 4kB for user messages
        };
    };
};

&gpio0 {
        gpio-line-names =
        /*A0-A7*/       "","","","","","","","",
        /*B0-B7*/       "","","","","","","","",
        /*C0-C7*/       "","","","","","","","",
        /*D0-D7*/       "","","","","","","","",
        /*E0-E7*/       "","","","","","","","",
        /*F0-F7*/       "","","","","","","","",
        /*G0-G7*/       "","","","","","","","",
        /*H0-H7*/       "","","","","","","","",
        /*I0-I7*/       "","","","","","","","",
        /*J0-J7*/       "","","","","","","","",
        /*K0-K7*/       "","","","","","","","",
        /*L0-L7*/       "","","","","","","","",
        /*M0-M7*/       "","","","","","","","",
        /*N0-N7*/       "","","","fpga_ready","","","","",
        /*O0-O7*/       "","","","","","","","",
        /*P0-P7*/       "","","","","","","","",
        /*Q0-Q7*/       "","","","","","","","",
        /*R0-R7*/       "","","","","","","","",
        /*S0-S7*/       "","","","","","","","",
        /*T0-T7*/       "","","","","","","","",
        /*U0-U7*/       "","","","","","","","",
        /*V0-V7*/       "","","","","","","","",
        /*W0-W7*/       "","","","","","","","",
        /*X0-X7*/       "","","","","","","","",
        /*Y0-Y7*/       "","","","","","","","",
        /*Z0-Z7*/       "","","","","","","","";
};

&gpio1 {
        gpio-line-names =
        /*AA0-AA7*/     "","","","","","","","",
        /*AB0-AB7*/     "","","","","","","","",
        /*AC0-AC7*/     "","","","","","","","",
        /*AD0-AD7*/     "","","","","","","","",
        /*AE0-AE7*/     "","","","","","","","";
};

&fmc {
    status = "okay";
    flash@0 {
        status = "okay";
        compatible = "jedec,spi-nor";
        label = "bmc";
        spi-max-frequency = <50000000>;
#include "aspeed-bmc-nvidia-hgxb300-flash-layout-64.dtsi"
    };
};

&fmcraw {
    status = "okay";
    spidev@0 {
        compatible = "hgx,glacier";
        status = "okay";
    };
};

&spi2 {
    status = "okay";
    pinctrl-names = "default";
    pinctrl-0 = <&pinctrl_spi2_default>;

    flash@0 {
        status = "okay";
        label = "config";
        spi-max-frequency = <50000000>;
        partitions {
            compatible = "fixed-partitions";
            #address-cells = <1>;
            #size-cells = <1>;

            u-boot-env@0 {
                reg = <0x0 0x40000>;         // 0.25 MB
                label = "u-boot-env";
            };

            rwfs@40000 {
                reg = <0x40000 0x1000000>;   // 16 MB
                label = "rwfs";
            };

            log@3800000 {
                reg = <0x3800000 0xc800000>; // 200 MB
                label = "log";
            };
        };
    };
};


&uart5 {
	// BMC Debug Console
	status = "okay";
};

/*
&mac2 {
	status = "okay";

	phy-mode = "rgmii";
	phy-handle = <&ethphy2>;

	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_rgmii3_default>;
};

&mdio2 {
	status = "okay";

	ethphy2: ethernet-phy@0 {
		compatible = "ethernet-phy-ieee802.3-c22";
		reg = <0>;
	};
};
*/

// Enable emmc
&emmc_controller {
        status = "okay";
};

&emmc {
        non-removable;
        bus-width = <4>;
        max-frequency = <52000000>;
};

/*
 * Enable port A as device (via the virtual hub) and port B as
 * host by default on the eval board. This can be easily changed
 * by replacing the override below with &ehci0 { ... } to enable
 * host on both ports.
 */
&vhub {
   status = "okay";
};

// USB 2.0 to HMC & Host BMC connectivity
&udc {
    status = "okay";
};

// Host port USB 2.0
&ehci0 {
   status = "okay";
};

// USB 1.0
&uhci {
   status = "okay";
};

// Bring-up effort: Shall remove for Umbriel production?
// I2C Master (non Umbriel HMC POR), though Vulcan keeps it
&i2c0 {             
    status = "okay";
};                  

// Bring-up effort: Shall remove for Umbriel production?
// I2C Master (non Umbriel HMC POR), though Vulcan keeps it
&i2c1 {
    status = "okay";
};

&i2c2 {
    status = "okay";
    i2c-slave-mqueue@18 {
        compatible = "slave-mqueue";
        reg = <(I2C_OWN_SLAVE_ADDRESS | 0x18)>;
    };
};

&i2c3 {
    status = "okay";
    // GPU Baseboard FRU
    eeprom@53 {
    compatible = "atmel,24c256";
    reg = <0x53>;
    };

    // HMC FRU
    eeprom@4e {
    compatible = "atmel,24c02";
    reg = <0x4E>;
    };
};

&i2c4 {
    status = "okay";
    rtc@32 {
        compatible = "epson,rx8130";
        reg = <0x32>;
    };

    exp0: pca9535@20 {
        compatible = "nxp,pca9535";
        reg = <0x20>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&gpio0>;
        interrupts = <ASPEED_GPIO(U, 7) IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // interrupt-parent = <&gpio0>;

        gpio-line-names =
            "SXM_1_MCU_RESET_N-O",
            "SXM_2_MCU_RESET_N-O",
            "SXM_3_MCU_RESET_N-O",
            "SXM_4_MCU_RESET_N-O",
            "SXM_5_MCU_RESET_N-O",
            "SXM_6_MCU_RESET_N-O",
            "SXM_7_MCU_RESET_N-O",
            "SXM_8_MCU_RESET_N-O",
            "SXM_1_MCU_RECOV_N-O",
            "SXM_2_MCU_RECOV_N-O",
            "SXM_3_MCU_RECOV_N-O",
            "SXM_4_MCU_RECOV_N-O",
            "SXM_5_MCU_RECOV_N-O",
            "SXM_6_MCU_RECOV_N-O",
            "SXM_7_MCU_RECOV_N-O",
            "SXM_8_MCU_RECOV_N-O";
    };

    exp1: pca9535@21 {
        compatible = "nxp,pca9535";
        reg = <0x21>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&gpio0>;
        interrupts = <ASPEED_GPIO(P, 0) IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // interrupt-parent = <&gpio0>;

        gpio-line-names =
            "HMC_RESET_CX8_2_L-O",
            "HMC_RESET_CX8_4_L-O",
            "CX8_2_IB_RECOV_EN-O",
            "SNN_HMC_IOEXP1_0_3-I", //What is this??
            "CX8_2_BOOT_CMPLT-I",
            "CX8_4_BOOT_CMPLT-I",
            "CX8_2_TMP_WAN-I",
            "CX8_4_TMP_WAN-I",
            "CX8_2_OVER_TEMP_L-I",
            "CX8_4_OVER_TEMP_L-I",
            "HMC_CX8_2_FNP_N-O",
            "HMC_CX8_4_FNP_N-O",
            "CX8_4_IB_RECOV_EN-O",
            "MCU1_RSVD_GPIO-O",
            "MCU1_RST_N-O",
            "MCU1_RECOV_N-O";
    };

    exp2: pca9535@22 {
        compatible = "nxp,pca9535";
        reg = <0x22>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&gpio0>;
        interrupts = <ASPEED_GPIO(R, 0) IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // interrupt-parent = <&gpio0>;

        gpio-line-names =
            "HMC_RESET_CX8_3_L-O",
            "HMC_RESET_CX8_1_L-O",
            "CX8_3_IB_RECOV_EN-O",
            "SNN_HMC_IOEXP2_0_4-I", //What is this??
            "CX8_3_BOOT_CMPLT-I",
            "CX8_1_BOOT_CMPLT-I",
            "CX8_3_TMP_WAN-I",
            "CX8_1_TMP_WAN-I",
            "CX8_3_OVER_TEMP_L-I",
            "CX8_1_OVER_TEMP_L-I",
            "HMC_CX8_3_FNP_N-O",
            "HMC_CX8_1_FNP_N-O",
            "CX8_1_IB_RECOV_EN-O",
            "MCU2_RSVD_GPIO-O",
            "MCU2_RST_N-O",
            "MCU2_RECOV_N-O";
    };

    exp3: pca9535@23 {
        compatible = "nxp,pca9535";
        reg = <0x23>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&gpio0>;
        interrupts = <ASPEED_GPIO(P, 1) IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // interrupt-parent = <&gpio0>;

        gpio-line-names =
            "HMC_RESET_CX8_8_L-O",
            "HMC_RESET_CX8_6_L-O",
            "CX8_8_IB_RECOV_EN-O",
            "SNN_HMC_IOEXP3_0_4-I", //What is this??
            "CX8_8_BOOT_CMPLT-I",
            "CX8_6_BOOT_CMPLT-I",
            "CX8_8_TMP_WAN-I",
            "CX8_6_TMP_WAN-I",
            "CX8_8_OVER_TEMP_L-I",
            "CX8_6_OVER_TEMP_L-I",
            "HMC_CX8_8_FNP_N-O",
            "HMC_CX8_6_FNP_N-O",
            "CX8_6_IB_RECOV_EN-O",
            "MCU3_RSVD_GPIO-O",
            "MCU3_RST_N-O",
            "MCU3_RECOV_N-O";
    };

    exp4: pca9535@24 {
        compatible = "nxp,pca9535";
        reg = <0x24>;
        gpio-controller;
        #gpio-cells = <2>;

        #address-cells = <1>;
        #size-cells = <0>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&gpio0>;
        interrupts = <ASPEED_GPIO(R, 1) IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // interrupt-parent = <&gpio0>;

        gpio-line-names =
            "HMC_RESET_CX8_5_L-O",
            "HMC_RESET_CX8_7_L-O",
            "CX8_5_IB_RECOV_EN-O",
            "SNN_HMC_IOEXP4_0_4-I", //What is this??
            "CX8_5_BOOT_CMPLT-I",
            "CX8_7_BOOT_CMPLT-I",
            "CX8_5_TMP_WAN-I",
            "CX8_7_TMP_WAN-I",
            "CX8_5_OVER_TEMP_L-I",
            "CX8_7_OVER_TEMP_L-I",
            "HMC_CX8_5_FNP_N-O",
            "HMC_CX8_7_FNP_N-O",
            "CX8_7_IB_RECOV_EN-O",
            "MCU4_RSVD_GPIO-O",
            "MCU4_RST_N-O",
            "MCU4_RECOV_N-O";
    };
};

// CX8_2 / CX8_4 DBG I2C, CX8_2 / CX8_4 I2C_2 FW update
&i2c5 {
    status = "okay";

    i2c-switch@71 {
        compatible = "nxp,pca9546";
        #address-cells = <1>;
        #size-cells = <0>;
        reg = <0x71>;

        // interrupt-parent = <&ipic>;
        // interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // #interrupt-cells = <2>;

        i2c5_mux71_0: i2c@0 {
            reg = <0>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c5_mux71_1: i2c@1 {
            reg = <1>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c5_mux71_2: i2c@2 {
            reg = <2>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c5_mux71_3: i2c@3 {
            reg = <3>;
            #address-cells = <1>;
            #size-cells = <0>;
        };
    };
};

// HMC - FPGA Bus
&i2c6 {
    status = "okay";
};

// CX8_3 / CX8_1 DBG I2C, CX8_3 / CX8_1 I2C_2 FW update
&i2c7 {
    status = "okay";

    i2c-switch@71 {
        compatible = "nxp,pca9546";
        #address-cells = <1>;
        #size-cells = <0>;
        reg = <0x71>;

        // interrupt-parent = <&ipic>;
        // interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // #interrupt-cells = <2>;

        i2c7_mux71_0: i2c@0 {
            reg = <0>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c7_mux71_1: i2c@1 {
            reg = <1>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c7_mux71_2: i2c@2 {
            reg = <2>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c7_mux71_3: i2c@3 {
            reg = <3>;
            #address-cells = <1>;
            #size-cells = <0>;
        };
    };
};

// CX8_8 / CX8_6 DBG I2C, CX8_8 / CX8_6 I2C_2 FW update
&i2c9 {
    status = "okay";

    i2c-switch@71 {
        compatible = "nxp,pca9546";
        #address-cells = <1>;
        #size-cells = <0>;
        reg = <0x71>;

        // interrupt-parent = <&ipic>;
        // interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // #interrupt-cells = <2>;

        i2c9_mux71_0: i2c@0 {
            reg = <0>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c9_mux71_1: i2c@1 {
            reg = <1>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c9_mux71_2: i2c@2 {
            reg = <2>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c9_mux71_3: i2c@3 {
            reg = <3>;
            #address-cells = <1>;
            #size-cells = <0>;
        };
    };
};

// Ethernet SW, CX8_5 / CX8_7 DBG I2C, CX8_5 / CX8_7 I2C_2 FW update
&i2c10 {
    status = "okay";

    i2c-switch@71 {
        compatible = "nxp,pca9546";
        #address-cells = <1>;
        #size-cells = <0>;
        reg = <0x71>;

        // interrupt-parent = <&ipic>;
        // interrupts = <17 IRQ_TYPE_LEVEL_LOW>;
        // interrupt-controller;
        // #interrupt-cells = <2>;

        i2c10_mux71_0: i2c@0 {
            reg = <0>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c10_mux71_1: i2c@1 {
            reg = <1>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c10_mux71_2: i2c@2 {
            reg = <2>;
            #address-cells = <1>;
            #size-cells = <0>;
        };

        i2c10_mux71_3: i2c@3 {
            reg = <3>;
            #address-cells = <1>;
            #size-cells = <0>;
        };
    };
};

&i2c12 {
    status = "okay";
};

&i2c13 {
    status = "okay";
};

&i2c14 {
    status = "okay";
    lm75@48 {
        compatible = "ti,tmp75";
        reg = <0x48>;
    };
};

// PCIe RC
&pcie {
        status = "okay";

        interrupts = <GIC_SPI 168 IRQ_TYPE_LEVEL_HIGH>;

        pcie_intc0: legacy-interrupt-controller {
                interrupts = <GIC_SPI 168 IRQ_TYPE_EDGE_RISING>;
        };
};

// Bridge between AHB bus and PCIe RC.
&h2x {
        status = "okay";
};

&mctp {
    status = "okay";
};

&rng {
    status = "okay";
};

&hace {
	status = "okay";
	dummy-key1 = /bits/ 8 <0x86 0xD0 0x02 0x8D 0x1E 0x3D 0x44 0x0F 0x06 0x13 0xC7 0x6F 0xFC 0x4B 0x0B 0x22 0x75 0x1E 0x55 0x6E 0x5E 0x01 0x2E 0x6B 0x24 0x29 0x0B 0xBF 0xB8 0x29 0x90 0x8F>;
	dummy-key2 = /bits/ 8 <0xCD 0x83 0xBA 0x8D 0xD4 0x71 0x66 0x5E 0xC6 0x67 0xCC 0xE4 0x8C 0x7C 0xFC 0x40 0x0A 0xC5 0x00 0xB1 0x24 0xAC 0xF4 0x7C 0x3D 0x40 0x37 0x28 0xB0 0x3E 0x50 0x74>;
};

&acry {
	status = "okay";
};
